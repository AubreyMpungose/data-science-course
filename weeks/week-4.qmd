---
title: " 4 Data Manupulation II"
code-copy: true
code-line-numbers: true
tidy: true
toc: true
---

## 4.1 Introduction

In this week we focus on advanced data manipulation in R. We will continue using the `dplyr` package in the `tidyverse`.

## 4.2 Prepration

### Download data

We will be using the Environmental Performance Index (EPI) dataset, from [Socioeconomic Data and Applications Center](https://sedac.ciesin.columbia.edu/data/set/epi-environmental-performance-index-2018). This data tracks the environmental performance of countries based on several indicators, including:

-   Air Quality
-   Water and Sanitation
-   Heavy Metals
-   Biodiversity and Habitat
-   Forests
-   Fisheries
-   Climate and Energy
-   Air Pollution
-   Water Resources
-   Agriculture

The EPI is, therefore, an index score based on these indicators. Download data:

```{r download epi data}
epi <- read.csv("https://raw.githubusercontent.com/AubreyMpungose/data-science-course/main/weeks/data/epi_data.csv")

epi
```

Let us examine the data first:

```{r examine epi data}

str(epi)
```

We have `ncol(epi)` variables:

-   "country_code"

-   "country"

-   "population"

-   "pop_density"

-   "GDP"

-   "sdg_index": Sustainable Development Goals Index

-   "epi_score"


## 4.3 Counting the data

How many countries are in `epi` data? We can use the `count()` fucntion:

```{r count}
epi |> 
  count(country)
```














Before analysing  the `epi` data, data providers indicated that observations with `-9999` in the `contain missing values; thus, including them in our analysis would result into misleading results. Let us examine the missing observations:

```{r filter missing epi}

epi |> 
  filter(sdg_index == -9999) |> 
  nrows()
```

There 25 rows with missing values, we may want to remove them:

```{r remove epi missing}

epi <- epi |> 
  filter(!sdg_index == -9999)
```


