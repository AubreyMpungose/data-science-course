{
  "hash": "6f60a2477cf99dadeaf20703c3abde3d",
  "result": {
    "markdown": "---\ntitle: \"3 Data Visualisation\"\ncode-copy: true\ncode-line-numbers: true\ntidy: true\n---\n\n\n## 3.1 Introduction\n\nData visualisation is an important skill for data scientists. In fact, data manipulation and visualisations go hand in hand. In this section, we will use the `ggplot2` package within `tidyverse` to learn the foundations of data visualisation. 'ggplot' stands for *grammar of graphics*. \n\nAs said before, Base R also comes with built-in functions for data visualisation. Let us briefly explore some of the functions in Base R before diving into `ggplot2`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## load gapminder data and save \nlibrary(gapminder)\ngapminder <- gapminder\n\n# filter year 2007\n\ngapminder_2007 <- dplyr::filter(gapminder, year == 2007)\n```\n:::\n\n\nYou can create a histogram using the `hist()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(gapminder_2007 $lifeExp)\n```\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/Base R-hist-1.png){width=672}\n:::\n:::\n\n\nYou can create a scatterplot to visualise the relationship between two numerical variables:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(gapminder_2007 $lifeExp, gapminder_2007 $gdpPercap)\n```\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/Base R scatter-1.png){width=672}\n:::\n:::\n\n\n## 3.2 Welcome to ggplot\n\n`ggplot2` has steps/processes you follow to create a plot. Let us illustrate using the `gapminder` dataset. Load `tidyverse` package first:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'forcats' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\nCreate a basic scatterplot of life expectancy and GDP per capita:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007,\n    aes(x = gdpPercap, y = lifeExp)) + \n    geom_point()\n```\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/ggplot-intro-scatter-1.png){width=672}\n:::\n:::\n\n\nIn the code above, we have three steps to create a plot:\n\n1. `ggplot(data = gapminder)`: we are simply telling ggplot that we are using gapminder dataset\n\n2. `ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp))`: we are adding *mapping aesthetics* or *aesthetics*, allocating x, y axis. There are other *aesthetics* that we can add, such as *size, colour, shape, group, etc*. We will use these later in thise section.\n\n3. `ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point()`: We have added a geometry layer through `geoms_point()` function to create a scatterplot. *geoms* tell ggplot what type of geometry/graph/plot we want to create. There are several geoms that we are going to use, such as:\n\n    - `geom_point()`\n    \n    - `geom_line()`\n    \n    - `geom_histogram()`\n    \n    - `geom_area()`\n    \n    - `geom_boxplot()`\n    \n    - `geom_bar()`\n    \n\n## 3.3 Visualising Numerical data\n\n### 3.3.1 Single variable\n\nFor visualising one variable, we mostly histogram, density plot, etc:\n\nCreate a histogram of GDP per capita:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007, aes(gdpPercap)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/ggplot-histogram-1.png){width=672}\n:::\n:::\n\n\nWe can see that the GDP per capita variable is skewed. Density plots are also similar to histograms:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007, aes(gdpPercap)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/ggplot-density-1.png){width=672}\n:::\n:::\n\n\n### 3.3.2 Visualising more than one numerical variables\n\nA scatter plot is used to show relationship between two variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007, aes(x = gdpPercap, y = lifeExp)) + \n    geom_point()\n```\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/ggplot-scatter-1.png){width=672}\n:::\n:::\n\n\nWe can add other aeasthetics such as shape, colour etc: Let's add the colour aesthetics:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007, aes(x = gdpPercap, y = lifeExp, colour = continent)) + \n    geom_point()\n```\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/ggplot-scatter-colour-1.png){width=672}\n:::\n:::\n\n\nWe can change the add the size aesthetics and use population of the country:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007, aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/ggplot-scatter-size-1.png){width=672}\n:::\n:::\n\n\n### 3.3.3 Visualising numerical by group/category\n\nA boxplot and column charts are useful when we want to view statistics by a particular group, let say, GDP by continent:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007, aes(x = continent, y = gdpPercap)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](week-2_files/figure-html/ggplot-boxplot-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "week-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}